name: CI-CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build with Maven (via JFrog)
      run: ./mvnw clean package -DskipTests

    - name: Install JFrog CLI v2
      run: |
        curl -fL https://install-cli.jfrog.io | sh
        sudo mv jf /usr/local/bin/

    - name: Configure JFrog CLI
      env:
        JFROG_URL: ${{ secrets.JFROG_URL }}
        JFROG_USER: ${{ secrets.JFROG_USER }}
        JFROG_API_KEY: ${{ secrets.JFROG_API_KEY }}
      run: |
        jf config add \
          --artifactory-url="${JFROG_URL}" \
          --user="${JFROG_USER}" \
          --password="${JFROG_API_KEY}" \
          --interactive=false

    - name: Docker Login to JFrog
      env:
        JFROG_USER: ${{ secrets.JFROG_USER }}
        JFROG_API_KEY: ${{ secrets.JFROG_API_KEY }}
        JFROG_DOCKER_URL: ${{ secrets.JFROG_DOCKER_URL }}
      run: |
        echo "${JFROG_API_KEY}" | docker login $JFROG_DOCKER_URL --username $JFROG_USER --password-stdin

    - name: Build Docker Image from JFrog-hosted base
      run: docker build -t petclinic:latest .

    - name: Tag and Push Docker Image to JFrog
      env:
        JFROG_DOCKER_URL: ${{ secrets.JFROG_DOCKER_URL }}
      run: |
        docker tag petclinic:latest $JFROG_DOCKER_URL/petclinic:latest
        docker push $JFROG_DOCKER_URL/petclinic:latest

    - name: Push Docker Image to JFrog with Build Info
      env:
        JFROG_DOCKER_URL: ${{ secrets.JFROG_DOCKER_URL }}
      run: |
        jf docker push $JFROG_DOCKER_URL/petclinic:latest $JFROG_DOCKER_URL \
          --build-name=petclinic-ci \
          --build-number=${{ github.run_number }}

    - name: Publish Build Info to Artifactory
      run: |
        jf rt build-publish petclinic-ci ${{ github.run_number }}

    - name: Xray Scan Build
      run: |
        jf xr build-scan petclinic-ci ${{ github.run_number }}

    - name: Upload Xray Scan Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: xray-scan-result
        path: ${{ github.workspace }}/xray

