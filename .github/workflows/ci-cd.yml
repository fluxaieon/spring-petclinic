name: CI-CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Create Maven settings.xml with JFrog Mirror
      run: |
        mkdir -p ~/.m2
        cat <<EOF > ~/.m2/settings.xml
        <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd">
          <mirrors>
            <mirror>
              <id>jfrog</id>
              <mirrorOf>central</mirrorOf>
              <url>https://triald3g81v.jfrog.io/artifactory/maven-virtual/</url>
            </mirror>
          </mirrors>
          <servers>
            <server>
              <id>jfrog</id>
              <username>${{ secrets.JFROG_USER }}</username>
              <password>${{ secrets.JFROG_API_KEY }}</password>
            </server>
          </servers>
        </settings>
        EOF

    - name: Build with Maven
      run: ./mvnw clean package -DskipTests

    - name: Login to JFrog Docker Registry
      env:
        JFROG_USER: ${{ secrets.JFROG_USER }}
        JFROG_API_KEY: ${{ secrets.JFROG_API_KEY }}
        JFROG_DOCKER_URL: ${{ secrets.JFROG_DOCKER_URL }}
      run: |
        echo "${JFROG_API_KEY}" | docker login $JFROG_DOCKER_URL --username $JFROG_USER --password-stdin

    - name: Build Docker Image
      run: docker build -t petclinic:latest .

    - name: Install JFrog CLI v2
      run: |
        curl -fL https://install-cli.jfrog.io | sh
        ./jfrog --version

    - name: Configure JFrog CLI
      env:
        JFROG_URL: ${{ secrets.JFROG_URL }}
        JFROG_USER: ${{ secrets.JFROG_USER }}
        JFROG_API_KEY: ${{ secrets.JFROG_API_KEY }}
      run: |
        ./jfrog config add my-jfrog-server \
          --artifactory-url=$JFROG_URL \
          --user=$JFROG_USER \
          --password=$JFROG_API_KEY \
          --interactive=false

    - name: Push Docker Image with Build Info
      env:
        JFROG_DOCKER_URL: ${{ secrets.JFROG_DOCKER_URL }}
      run: |
        ./jfrog rt docker-push petclinic:latest docker-virtual \
          --build-name=petclinic \
          --build-number=1

    - name: Publish Build Info to Artifactory
      run: |
        ./jfrog rt build-collect-env petclinic 1
        ./jfrog rt build-publish petclinic 1

    - name: Trigger Xray Scan on Build
      run: |
        ./jfrog xr build-scan petclinic 1 --format=json > xray-report.json

    - name: Upload Xray Scan Report
      uses: actions/upload-artifact@v4
      with:
        name: xray-report
        path: xray-report.json

